#!/bin/bash
# setup dev env on debian

if [ $# -eq 0 ]; then
    echo "No arguments passed"
    echo "Available arguments are 'setup' and 'run'"
    exit

elif [ $# -eq 1 ]; then
    if [ $1 == 'setup' ]; then
        # install system-wide dependencies 
        sudo apt-get install -y git curl python-pip make build-essential libssl-dev zlib1g-dev libbz2-dev \
        libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \
        xz-utils tk-dev

        # install and initialize pyenv
        curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash
        git clone https://github.com/pyenv/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv
        export PYENV_ROOT="$HOME/.pyenv"
        export PATH="$PYENV_ROOT/bin:$PATH"
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"

        # setting up virtualenv and installing requirements
        pyenv install 3.6.5
        pyenv virtualenv 3.6.5 systers
        pyenv activate systers
        pip install -r ../requirements/dev.txt

        # create the database using psql and the user postgres
        read -p "Username: " username
        while true; do
            read -s -p "Password: " password
            echo
            read -s -p "Password (again): " password2
            echo
            [ "$password" = "$password2" ] && break
            echo "Please try again"
        done
        read -p "Enter the name of the db: " db
        sudo -i -u postgres psql -c "CREATE USER $username WITH PASSWORD '$password'"
        sudo -i -u postgres psql -c "CREATE DATABASE $db"
        sudo -i -u postgres psql -c "\c $db"
        sudo -i -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE $db TO $username"

        # change the django settings
        sed -i.bak "s/'NAME': 'systersdb',/'NAME': '$db',/" ../systers_portal/systers_portal/settings/dev.py
        sed -i.bak "s/'USER': '',/'USER': '$username',/" ../systers_portal/systers_portal/settings/dev.py
        sed -i.bak "s/'PASSWORD': '',/'PASSWORD': '$password',/" ../systers_portal/systers_portal/settings/dev.py

        # app specific setup
        export SECRET_KEY='foobarbaz'
        python ../systers_portal/manage.py migrate
        python ../systers_portal/manage.py cities_light
        python ../systers_portal/manage.py createsuperuser

        # message to user
        echo "Setup complete"
        echo "Now you can run './devenv-debian run' to host the development server"

    elif [ $1 == 'run' ]; then
        # host the development server
        export SECRET_KEY='foobarbaz'
        python ../systers_portal/manage.py runserver

    else
        echo "Wrong argument '$1'"        
        echo "Available arguments are 'setup' and 'run'"

    fi
else
    echo "Wrong number of arguments passed"
    echo "Available arguments are 'setup' and 'run'"
    exit

fi
